{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","mv","medium_cover_image","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+RA4BeA,MArBf,YAAyD,EAAzCC,GAA0C,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC7C,OAAO,sBAAKC,UAAY,QAAjB,UACH,qBAAKC,IAAOH,EAAQI,IAAON,EAAOA,MAASA,IAC3C,sBAAKI,UAAY,aAAjB,UACI,oBAAIA,UAAY,cAAhB,SAA+BJ,IAC/B,oBAAII,UAAY,aAAhB,SAA8BL,IAC9B,oBAAIK,UAAU,eAAd,SAA8BD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OAAkB,oBAAkBL,UAAW,eAA7B,SAA6CI,GAAlCC,QACtE,oBAAGL,UAAY,gBAAf,UAAgCH,EAAQS,MAAM,EAAE,KAAhD,gBCqCGC,G,kNA9CbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAGbC,U,sBAAY,8BAAAC,EAAA,sEAE4BC,IAAMC,IAAI,4DAFtC,gBAEUJ,EAFV,EAEJK,KAAMA,KAAQL,OAEpB,EAAKM,SAAS,CAACN,SAAQD,WAAY,IAJzB,2C,uDAQV,WACEQ,KAAKN,c,oBAGP,WAAS,IAAD,EAEwBM,KAAKT,MAA3BC,EAFF,EAEEA,UAAWC,EAFb,EAEaA,OAEnB,OACM,yBAASV,UAAY,YAArB,SACGS,EACD,qBAAKT,UAAY,SAAjB,SACE,sBAAMA,UAAY,cAAlB,0BAGA,qBAAKA,UAAY,SAAjB,SACAU,EAAOP,KAAI,SAAAe,GAAE,OACX,cAAC,EAAD,CACQxB,GAAIwB,EAAGxB,GACPC,KAAMuB,EAAGvB,KACTC,MAAOsB,EAAGtB,MACVC,QAASqB,EAAGrB,QACZC,OAAQoB,EAAGC,mBACXpB,OAAUmB,EAAGnB,QANNmB,EAAGE,gB,GA/BhBC,IAAMC,YCAxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.853cf434.chunk.js","sourcesContent":["// movie를 render\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n/*movie component는 state를 필요로 하지 않음-->class component일 필요 X*/\r\n\r\n\r\nfunction Movie({id, year, title, summary, poster,genres}){\r\n    return <div className = \"movie\">\r\n        <img src = {poster} alt = {title} title = {title}/>\r\n        <div className = \"movie_data\">\r\n            <h3 className = \"movie_title\">{title}</h3>\r\n            <h5 className = \"movie_year\">{year}</h5>\r\n            <ul className=\"movie_genres\">{genres.map((genre,index) => (<li key = {index} className =\"genres_genre\">{genre}</li> ))}</ul>\r\n            <p className = \"movie_summary\">{summary.slice(0,140)}...</p>\r\n        </div>\r\n    </div>\r\n} \r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\"\nclass App extends React.Component{\n  state = {\n    isLoading : true, //mount되자마자 isLoading은 기본적으로 true\n    movies : []\n  };\n\ngetMovies = async () => {\n  // const movies.data.data.movies = await axios(“ “);\n  const{data:{data : {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n  //this.setState({movies:movies}) 앞에 movies는 setState의 movies이고 뒤에는 axios에서 온 movies임 \n  this.setState({movies, isLoading : false});  //단축해서 사용 가능\n}\n//async : 이 함수는 비동기이다(기다려야 한다) await, axios가 끝날때 까지 기다렸다가 계속 함.\n/*render 하면 호출되는 life cycle method */ \n  componentDidMount(){\n    this.getMovies();\n  }\n  \n  render(){\n    \n    const { isLoading, movies } = this.state; //ES6이랑 관련,isLoading대신에 this.state.isLoading써도 되지만 바람직X\n    //movie배열 요소를 mv를 통해 Movie함수에 전달한다.\n    return (\n          <section className = \"container\"> \n            {isLoading ? ( // class내에 있으므로 혼란스러울 수도있으므로 className이 적절\n            <div className = \"loader\">\n              <span className = \"loader_test\">Loading...</span> \n            </div>\n            ):(\n              <div className = \"movies\">{\n              movies.map(mv =>(\n                <Movie  key = {mv.key} //각각 child는 유일한 key prop를 가져야 함\n                        id={mv.id} \n                        year={mv.year} \n                        title={mv.title} \n                        summary={mv.summary}\n                        poster={mv.medium_cover_image}\n                        genres = {mv.genres}\n                />\n                ))}\n              </div>\n            )}\n  </section>\n    );\n  }\n}\n\nexport default App;\n \n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; //같은 폴더 내에 있을 경우 ./뒤에 파일 명 작성\n\nReactDOM.render(<App />, document.getElementById('root')); \n"],"sourceRoot":""}