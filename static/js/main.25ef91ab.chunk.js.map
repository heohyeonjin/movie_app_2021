{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","routes/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","Movie","id","year","title","summary","poster","genres","className","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","mv","medium_cover_image","key","React","Component","Detail","props","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAMeA,MAJf,WACI,OAAO,wF,gFC2CIC,MAtCf,YAAyD,IAAzCC,EAAwC,EAAxCA,GAAGC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OAC5C,OACI,qBAAKC,UAAY,QAAjB,SACA,eAAC,IAAD,CACEC,GAAM,CACJC,SAAQ,iBAAaR,GACrBS,MAAQ,CACJR,OACAC,QACAC,UACAC,SACAC,WARR,UAaY,qBAAKK,IAAON,EAAQO,IAAOT,EAAOA,MAASA,IAC3C,sBAAKI,UAAY,aAAjB,UACI,oBAAIA,UAAY,cAAhB,SAA+BJ,IAC/B,oBAAII,UAAY,aAAhB,SAA8BL,IAC9B,oBAAIK,UAAU,eAAd,SAA8BD,EAAOO,KAAI,SAACC,EAAMC,GAAP,OAAkB,oBAAkBR,UAAW,eAA7B,SAA6CO,GAAlCC,QACtE,oBAAGR,UAAY,gBAAf,UAAgCH,EAAQY,MAAM,EAAE,KAAhD,kBCuBTC,G,kNA9CbP,MAAQ,CACNQ,WAAY,EACZC,OAAS,I,EAGbC,U,sBAAY,8BAAAC,EAAA,sEAE4BC,IAAMC,IAAI,4DAFtC,gBAEUJ,EAFV,EAEJK,KAAMA,KAAQL,OAEpB,EAAKM,SAAS,CAACN,SAAQD,WAAY,IAJzB,2C,uDAQV,WACEQ,KAAKN,c,oBAGP,WAAS,IAAD,EAEwBM,KAAKhB,MAA3BQ,EAFF,EAEEA,UAAWC,EAFb,EAEaA,OAEnB,OACM,yBAASZ,UAAY,YAArB,SACGW,EACD,qBAAKX,UAAY,SAAjB,SACE,sBAAMA,UAAY,cAAlB,0BAGA,qBAAKA,UAAY,SAAjB,SACAY,EAAON,KAAI,SAAAc,GAAE,OACX,cAAC,EAAD,CACQ1B,GAAI0B,EAAG1B,GACPC,KAAMyB,EAAGzB,KACTC,MAAOwB,EAAGxB,MACVC,QAASuB,EAAGvB,QACZC,OAAQsB,EAAGC,mBACXtB,OAAUqB,EAAGrB,QANNqB,EAAGE,gB,GA/BfC,IAAMC,YCuBVC,E,uKAzBX,WAAoB,IAAD,EACaN,KAAKO,MAA1BC,EADQ,EACRA,SAAUC,EADF,EACEA,aACKC,IAAnBF,EAASxB,OACRyB,EAAQE,KAAK,O,oBAQrB,WAAS,IACEH,EAAYR,KAAKO,MAAjBC,SACP,OAAGA,EAASxB,MACD,+BAAOwB,EAASxB,MAAMP,QAGtB,S,GAlBE2B,IAAMC,WCOZO,MAPf,WACI,OAAQ,gCACJ,cAAC,IAAD,CAAM9B,GAAK,IAAX,kBACA,cAAC,IAAD,CAAMA,GAAK,SAAX,uBCgBO+B,MAbf,WACC,OAAQ,eAAC,IAAD,WACC,cAAC,EAAD,IACC,cAAC,IAAD,CAAOC,KAAO,IAAIC,OAAO,EAAMC,UAAazB,IAC5C,cAAC,IAAD,CAAOuB,KAAO,SAASE,UAAa3C,IACpC,cAAC,IAAD,CAAOyC,KAAO,aAAaE,UAAaV,QCTnDW,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAECC,SAASC,eAAe,W","file":"static/js/main.25ef91ab.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction About(){\r\n    return <span>About this page : I built it because I love movies.</span>\r\n}\r\n\r\nexport default About;","// movie를 render\r\nimport React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n/*movie component는 state를 필요로 하지 않음-->class component일 필요 X*/\r\n\r\n\r\nfunction Movie({id,year, title, summary, poster,genres}){\r\n    return(\r\n        <div className = \"movie\">\r\n        <Link \r\n          to = {{\r\n            pathname : `/movie/${id}`,\r\n            state : {\r\n                year,\r\n                title,\r\n                summary,\r\n                poster,\r\n                genres\r\n            }\r\n          }}\r\n         >\r\n            \r\n                    <img src = {poster} alt = {title} title = {title}/>\r\n                    <div className = \"movie_data\">\r\n                        <h3 className = \"movie_title\">{title}</h3>\r\n                        <h5 className = \"movie_year\">{year}</h5>\r\n                        <ul className=\"movie_genres\">{genres.map((genre,index) => (<li key = {index} className =\"genres_genre\">{genre}</li> ))}</ul>\r\n                        <p className = \"movie_summary\">{summary.slice(0,140)}...</p>\r\n         </div>\r\n         </Link>\r\n         </div>\r\n         );\r\n                }\r\n \r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year : PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary : PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","/*영화를 보여주는 페이지*/\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\"\r\nclass Home extends React.Component{\r\n  state = {\r\n    isLoading : true, //mount되자마자 isLoading은 기본적으로 true\r\n    movies : []\r\n  };\r\n\r\ngetMovies = async () => {\r\n  // const movies.data.data.movies = await axios(“ “);\r\n  const{data:{data : {movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n  //this.setState({movies:movies}) 앞에 movies는 setState의 movies이고 뒤에는 axios에서 온 movies임 \r\n  this.setState({movies, isLoading : false});  //단축해서 사용 가능\r\n}\r\n//async : 이 함수는 비동기이다(기다려야 한다) await, axios가 끝날때 까지 기다렸다가 계속 함.\r\n/*render 하면 호출되는 life cycle method */ \r\n  componentDidMount(){\r\n    this.getMovies();\r\n  }\r\n  \r\n  render(){\r\n    \r\n    const { isLoading, movies } = this.state; //ES6이랑 관련,isLoading대신에 this.state.isLoading써도 되지만 바람직X\r\n    //movie배열 요소를 mv를 통해 Movie함수에 전달한다.\r\n    return (\r\n          <section className = \"container\"> \r\n            {isLoading ? ( // class내에 있으므로 혼란스러울 수도있으므로 className이 적절\r\n            <div className = \"loader\">\r\n              <span className = \"loader_test\">Loading...</span> \r\n            </div>\r\n            ):(\r\n              <div className = \"movies\">{\r\n              movies.map(mv =>(\r\n                <Movie  key = {mv.key} //각각 child는 유일한 key prop를 가져야 함\r\n                        id={mv.id} \r\n                        year={mv.year} \r\n                        title={mv.title} \r\n                        summary={mv.summary}\r\n                        poster={mv.medium_cover_image}\r\n                        genres = {mv.genres}\r\n                />\r\n                ))}\r\n              </div>\r\n            )}\r\n  </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n \r\n ","import React from \"react\";\r\n\r\nclass Detail extends React.Component{\r\n    componentDidMount(){\r\n        const {location, history} = this.props;\r\n        if(location.state === undefined){\r\n            history.push(\"/\"); //자동적으로 home으로 돌아가게\r\n        }\r\n        //movie-deatil로 갈려면 클릭을 해야함. 클릭을 안하면 home으로 리다이렉트\r\n\r\n    }\r\n    //props: 상위 컴포넌트에서 하위 컴포넌트로 값을 전달.\r\n    //prop가능한 이유 : Detail은 컴포넌트 Route에 있는 것이기 때문\r\n    //네비게이션은 props가 없음.\r\n    render(){\r\n        const {location} = this.props;\r\n        if(location.state){\r\n            return <span>{location.state.title}</span>\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n        \r\n\r\n    }\r\n}\r\n//render()함수 호출 후 componentDidMount()호출\r\n\r\nexport default Detail;","import React from \"react\";\r\nimport { Link }from \"react-router-dom\";\r\nfunction Navigation(){\r\n    return (<div>\r\n        <Link to = \"/\">Home</Link>\r\n        <Link to = \"/about\">About</Link>\r\n    </div>\r\n    );\r\n}\r\nexport default Navigation;","\n/**라우터 생성 */\nimport React from \"react\";\nimport {HashRouter,Route} from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\nimport Navigation from \"./components/Navigation\";\nfunction App(){\n return( <HashRouter>\n          <Navigation />\n           <Route path = \"/\" exact={true} component = {Home}/>\n           <Route path = \"/about\" component = {About}/>\n           <Route path = \"/movie/:id\" component = {Detail}/>\n        </HashRouter>\n );\n}\n//HashRouter , BrowseRouter 선택\n//<HashRouter> : Router 생성\n//<Route path> : Router 안에 스크린을 넣는 것.\n//--> 페이지에서 /About치면 해당 html 불러옴\nexport default App;\n/*router : url을 가져다가 확인하고 라우터에게 명령한거에 따라서 컴포넌트를 불러옴 */\n// /home/instruction하면 두개 다 렌더링함. --> exact = {true}추가 : 해당 path아니면 렌더링 안함","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; //같은 폴더 내에 있을 경우 ./뒤에 파일 명 작성\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n        </React.StrictMode>,\n         document.getElementById('root')); \n"],"sourceRoot":""}